(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),i=(n(0),n(86)),o={title:"Reading Values from Storage",slug:"/basics/reading-values"},c={unversionedId:"basics/reading-values",id:"basics/reading-values",isDocsHomePage:!1,title:"Reading Values from Storage",description:"Now that we have created and initialized a storage value, we are going to start to interact with it!",source:"@site/docs/basics/reading-values.md",slug:"/basics/reading-values",permalink:"/ink-docs/basics/reading-values",editUrl:"https://github.com/ink-docs/edit/master/docs/basics/reading-values.md",version:"current",sidebar:"reference",previous:{title:"Storing Values",permalink:"/ink-docs/basics/storing-values"},next:{title:"Mutating Storage Values",permalink:"/ink-docs/basics/mutating-values"}},u=[{value:"Contract Functions",id:"contract-functions",children:[{value:"Public and Private Functions",id:"public-and-private-functions",children:[]}]},{value:"Storage Value API",id:"storage-value-api",children:[]},{value:"Getting a Value",id:"getting-a-value",children:[]},{value:"Your Turn!",id:"your-turn",children:[]}],l={rightToc:u};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Now that we have created and initialized a storage value, we are going to start to interact with it!"),Object(i.b)("h2",{id:"contract-functions"},"Contract Functions"),Object(i.b)("p",null,"As you can see in the contract template, all of your contract functions are part of your contract module."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-rust"}),"impl MyContract {\n    // Public and Private functions can go here\n}\n")),Object(i.b)("h3",{id:"public-and-private-functions"},"Public and Private Functions"),Object(i.b)("p",null,"In Rust, you can make as many implementations as you want. As a stylistic choice, we recommend breaking up your implementation definitions for your private and public functions:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-rust"}),"impl MyContract {\n    /// Public function\n    #[ink(message)]\n    pub fn my_public_function(&self) {\n        /* --snip-- */\n    }\n\n    /// Private function\n    fn my_private_function(&self) {\n        /* --snip-- */\n    }\n\n    /* --snip-- */\n}\n")),Object(i.b)("p",null,"You can also choose to split things up however is most clear for your project."),Object(i.b)("p",null,"Note that all public functions must use the ",Object(i.b)("inlineCode",{parentName:"p"},"#[ink(message)]")," attribute."),Object(i.b)("h2",{id:"storage-value-api"},"Storage Value API"),Object(i.b)("p",null,"Without going into so much detail, storage values are a part of the underlying ink! core layer. In the background, they use a more primitive ",Object(i.b)("inlineCode",{parentName:"p"},"cell")," type which holds an ",Object(i.b)("inlineCode",{parentName:"p"},"Option<T>"),". When we try to get the value from storage, we ",Object(i.b)("inlineCode",{parentName:"p"},"unwrap")," the value, which is why it panics if it is not initialized!"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-rust"}),"impl<T> Value<T>\nwhere\n    T: scale::Codec,\n{\n    /// Returns an immutable reference to the wrapped value.\n    pub fn get(&self) -> &T {\n        self.cell.get().unwrap()\n    }\n\n    /// Returns a mutable reference to the wrapped value.\n    pub fn get_mut(&mut self) -> &mut T {\n        self.cell.get_mut().unwrap()\n    }\n\n    /// Sets the wrapped value to the given value.\n    pub fn set(&mut self, val: T) {\n        self.cell.set(val);\n    }\n}\n")),Object(i.b)("p",null,"In that same file, you can find the other APIs exposed by storage values, however these three are the most commonly used."),Object(i.b)("h2",{id:"getting-a-value"},"Getting a Value"),Object(i.b)("p",null,"We already showed you how to initialize a storage value. Getting the value is just as simple:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-rust"}),"impl MyContract {\n    #[ink(message)]\n    pub fn my_getter(&self) -> u32 {\n        self.number\n    }\n}\n")),Object(i.b)("p",null,"In Rust, if the last expression in a function does not have a semicolon, then it will be the return value."),Object(i.b)("h2",{id:"your-turn"},"Your Turn!"),Object(i.b)("p",null,"Follow the ",Object(i.b)("inlineCode",{parentName:"p"},"ACTION"),"s on the code template provided."),Object(i.b)("p",null,"Remember to run ",Object(i.b)("inlineCode",{parentName:"p"},"cargo +nightly test")," to test your work."))}s.isMDXComponent=!0},86:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||i;return n?r.a.createElement(m,c(c({ref:t},l),{},{components:n})):r.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);