(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),i=(n(0),n(86)),c={title:"Overview",slug:"/ink-macros-attributes"},o={unversionedId:"ink-macros/overview",id:"ink-macros/overview",isDocsHomePage:!1,title:"Overview",description:"ink! Macros & Attributes",source:"@site/docs/ink-macros/overview.md",slug:"/ink-macros-attributes",permalink:"/ink-docs/ink-macros-attributes",editUrl:"https://github.com/ink-docs/edit/master/docs/ink-macros/overview.md",version:"current",sidebar:"reference",previous:{title:"Off-chain Testing",permalink:"/ink-docs/basics/off-chain-testing"},next:{title:"Overview",permalink:"/ink-docs/cargo-contract-cli"}},b=[{value:"ink! Macros &amp; Attributes",id:"ink-macros--attributes",children:[{value:"Entry Point",id:"entry-point",children:[]},{value:"Trait Definitions",id:"trait-definitions",children:[]},{value:"Off-chain Testing",id:"off-chain-testing",children:[]}]}],l={rightToc:b};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"ink-macros--attributes"},"ink! Macros & Attributes"),Object(i.b)("h3",{id:"entry-point"},"Entry Point"),Object(i.b)("p",null,"In a module annotated with ",Object(i.b)("inlineCode",{parentName:"p"},"#[ink::contract]")," these attributes are available:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Attribute"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Where Applicable"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},"#[ink(storage)]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"On ",Object(i.b)("inlineCode",{parentName:"td"},"struct")," definitions."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Defines the ink! storage struct. There can only be one ink! storage definition per contract.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},"#[ink(event)]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"On ",Object(i.b)("inlineCode",{parentName:"td"},"struct")," definitions."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Defines an ink! event. A contract can define multiple such ink! events.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},"#[ink(anonymous)]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Applicable to ink! events."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Tells the ink! codegen to treat the ink! event as anonymous which omits the event signature as topic upon emitting. Very similar to anonymous events in Solidity.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},"#[ink(topic)]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Applicate on ink! event field."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Tells the ink! codegen to provide a topic hash for the given field. Every ink! event can only have a limited number of such topic field. Similar semantics as to indexed event arguments in Solidity.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},"#[ink(message)]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Applicable to methods."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Flags a method for the ink! storage struct as message making it available to the API for calling the contract.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},"#[ink(constructor)]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Applicable to method."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Flags a method for the ink! storage struct as constructor making it available to the API for instantiating the contract.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},"#[ink(payable)]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Applicable to ink! messages."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Allows receiving value as part of the call of the ink! message. ink! constructors are implicitly payable.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},'#[ink(selector = "..")]')),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Applicable to ink! messages and ink! constructors."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Specifies a concrete dispatch selector for the flagged entity. This allows a contract author to precisely control the selectors of their APIs making it possible to rename their API without breakage.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},'#[ink(namespace = "..")]')),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Applicable to ink! trait implementation blocks."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Changes the resulting selectors of all the ink! messages and ink! constructors within the trait implementation. Allows to disambiguate between trait implementations with overlapping message or constructor names. Use only with great care and consideration!")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(i.b)("inlineCode",{parentName:"td"},"#[ink(implementation)]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Applicable to ink! implementation blocks."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Tells the ink! codegen that some implementation block shall be granted access to ink! internals even without it containing any ink! messages or ink! constructors.")))),Object(i.b)("p",null,"See ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://paritytech.github.io/ink/ink_lang/attr.contract.html"}),"here")," for a more detailed description of those and also for details on the ",Object(i.b)("inlineCode",{parentName:"p"},"#[ink::contract]")," macro."),Object(i.b)("h3",{id:"trait-definitions"},"Trait Definitions"),Object(i.b)("p",null,"Use",Object(i.b)("inlineCode",{parentName:"p"},"#[ink::trait_definition]")," to define your very own trait definitions that are then implementable by ink! smart contracts.\nSee e.g. the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/paritytech/ink/blob/master/examples/trait-erc20/lib.rs#L49-L51"}),Object(i.b)("inlineCode",{parentName:"a"},"examples/trait-erc20"))," contract on how to utilize it or ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://paritytech.github.io/ink/ink_lang/attr.trait_definition.html"}),"the documentation")," for details."),Object(i.b)("h3",{id:"off-chain-testing"},"Off-chain Testing"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"#[ink::test]")," proc. macro enables off-chain testing. See e.g. the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/paritytech/ink/blob/master/examples/erc20/lib.rs#L278-L280"}),Object(i.b)("inlineCode",{parentName:"a"},"examples/erc20"))," contract on how to utilize those or ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://paritytech.github.io/ink/ink_lang/attr.test.html"}),"the documentation")," for details."))}s.isMDXComponent=!0},86:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,O=p["".concat(c,".").concat(d)]||p[d]||m[d]||i;return n?r.a.createElement(O,o(o({ref:t},l),{},{components:n})):r.a.createElement(O,o({ref:t},l))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=d;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var l=2;l<i;l++)c[l]=n[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);