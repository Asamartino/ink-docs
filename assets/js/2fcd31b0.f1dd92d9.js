"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[7504],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),i=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=i(e.components);return r.createElement(s.Provider,{value:n},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=i(t),d=a,b=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return t?r.createElement(b,c(c({ref:n},u),{},{components:t})):r.createElement(b,c({ref:n},u))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[f]="string"==typeof e?e:a,c[1]=l;for(var i=2;i<o;i++)c[i]=t[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9178:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var r=t(7462),a=(t(7294),t(3905));const o={title:"useBalance",description:"A React hook for fetching balance information for Substrate chains."},c="useBalance",l={unversionedId:"frontend/core/hooks/substrate/use-balance",id:"frontend/core/hooks/substrate/use-balance",title:"useBalance",description:"A React hook for fetching balance information for Substrate chains.",source:"@site/docs/frontend/core/hooks/substrate/use-balance.md",sourceDirName:"frontend/core/hooks/substrate",slug:"/frontend/core/hooks/substrate/use-balance",permalink:"/frontend/core/hooks/substrate/use-balance",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/core/hooks/substrate/use-balance.md",tags:[],version:"current",frontMatter:{title:"useBalance",description:"A React hook for fetching balance information for Substrate chains."},sidebar:"reference",previous:{title:"useApi",permalink:"/frontend/core/hooks/substrate/use-api"},next:{title:"useBlockHeader",permalink:"/frontend/core/hooks/substrate/use-block-header"}},s={},i=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}],u={toc:i},f="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(f,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usebalance"},"useBalance"),(0,a.kt)("p",null,"A React hook for fetching balance information for Substrate chains."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useBalance, useWallet } from 'useink'\n\nfunction Balances() {\n  const { account } = useWallet()\n\n  // The default chain will be used if no chainId is given\n  // The default chain is the first chain config set in <UseInkProvider> props\n  const balance = useBalance(account) \n\n  // phala must be set in UseInkProvider config for this to work\n  const phalaBalance = useBalance(account, 'phala') \n\n  return (\n    <ul>\n      <li>Default Chain Balance: {balance ? balance.freeBalance : '--'}</li>\n      <li>Phala Balance: {balance ? balance.freeBalance : '--'}</li>\n    </ul>\n  )\n}\n")),(0,a.kt)("h2",{id:"return-value"},"Return Value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  freeBalance: Balance;\n  frozenFee: Balance;\n  frozenMisc: Balance;\n  reservedBalance: Balance;\n  votingBalance: Balance;\n} | undefined\n")))}p.isMDXComponent=!0}}]);