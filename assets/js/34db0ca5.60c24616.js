"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[4227],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(n),f=i,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||o;return n?r.createElement(d,a(a({ref:t},l),{},{components:n})):r.createElement(d,a({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},117:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={title:"Overview",slug:"/macros-attributes"},s=void 0,u={unversionedId:"macros-attributes/overview",id:"macros-attributes/overview",title:"Overview",description:"An ink! module is the module that is flagged by #[ink::contract] containing all the ink! definitions.",source:"@site/docs/macros-attributes/overview.md",sourceDirName:"macros-attributes",slug:"/macros-attributes",permalink:"/ink-docs/macros-attributes",editUrl:"https://github.com/ink-docs/edit/master/docs/macros-attributes/overview.md",tags:[],version:"current",frontMatter:{title:"Overview",slug:"/macros-attributes"},sidebar:"reference",previous:{title:"Environment Functions",permalink:"/ink-docs/basics/environment-functions"},next:{title:"#[ink::contract]",permalink:"/ink-docs/macros-attributes/contract"}},l={},p=[{value:"Merging Attributes",id:"merging-attributes",level:2}],m={toc:p};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An ink! module is the module that is flagged by ",(0,o.kt)("inlineCode",{parentName:"p"},"#[ink::contract]")," containing all the ink! definitions.\nAll ink! attributes are available to specify inside an ink! module."),(0,o.kt)("h2",{id:"merging-attributes"},"Merging Attributes"),(0,o.kt)("p",null,"It is possible to merge attributes that share a common flagged entity.\nThe example below demonstrates this for a payable message with a custom selector."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'#[ink(message)]\n#[ink(payable)]\n#[ink(selector = "0xCAFEBABE")]\npub fn transfer(&mut self, from: AccountId, to: AccountId, value: Balance) -> Result<(), Error> {\n    // actual implementation\n}\n')),(0,o.kt)("p",null,"We can also write the above ink! message definition in the following way:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'#[ink(message, payable, selector = "0xCAFEBABE")]\npub fn transfer(&mut self, from: AccountId, to: AccountId, value: Balance) -> Result<(), Error> {\n    // actual implementation\n}\n')))}f.isMDXComponent=!0}}]);