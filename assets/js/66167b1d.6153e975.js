"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[668],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),l=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=l(r),m=n,f=c["".concat(i,".").concat(m)]||c[m]||d[m]||o;return r?a.createElement(f,s(s({ref:t},p),{},{components:r})):a.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[c]="string"==typeof e?e:n,s[1]=u;for(var l=2;l<o;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9974:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const o={title:"Custom Data Structures",slug:"/datastructures/custom-datastructure"},s=void 0,u={unversionedId:"datastructures/custom",id:"version-4.0.0-alpha.1/datastructures/custom",title:"Custom Data Structures",description:"TODO: Beware, this page is no longer up to date for 4.0!",source:"@site/versioned_docs/version-4.0.0-alpha.1/datastructures/custom.md",sourceDirName:"datastructures",slug:"/datastructures/custom-datastructure",permalink:"/4.0.0-alpha.1/datastructures/custom-datastructure",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/versioned_docs/version-4.0.0-alpha.1/datastructures/custom.md",tags:[],version:"4.0.0-alpha.1",frontMatter:{title:"Custom Data Structures",slug:"/datastructures/custom-datastructure"},sidebar:"reference",previous:{title:"Spread Storage Layout",permalink:"/4.0.0-alpha.1/datastructures/spread-storage-layout"},next:{title:"Overview",permalink:"/4.0.0-alpha.1/examples"}},i={},l=[],p={toc:l};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"TODO: Beware, this page is no longer up to date for 4.0!")),(0,n.kt)("p",null,"While the ",(0,n.kt)("inlineCode",{parentName:"p"},"ink_storage")," crate provides tons of useful utilities and data structures to organize and manipulate the contract's storage contract authors are not limited by its capabilities. By implementing the core ",(0,n.kt)("inlineCode",{parentName:"p"},"SpreadLayout"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"PackedLayout")," traits (and the ",(0,n.kt)("inlineCode",{parentName:"p"},"StorageLayout")," trait for supporting the metadata generated for the ",(0,n.kt)("inlineCode",{parentName:"p"},".contract")," bundle) users are able to define their very own custom storage data structures with their own set of requirement and features that work along the ",(0,n.kt)("inlineCode",{parentName:"p"},"ink_storage")," data structures as long as they fulfill the mere requirements stated by those two traits."),(0,n.kt)("p",null,"A basic example of a custom struct is shown below:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"struct Inner {\n    value: bool\n}\n\n#[ink(storage)]\npub struct MyContract {\n    inner: Inner\n}\n")),(0,n.kt)("p",null,"Compiling the above will result in errors. While having an inner struct which holds only a boolean might not be the best idea, it serves well to illustrate how to implement the trait:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"impl SpreadLayout for Inner {\n    const FOOTPRINT: u64 = 1;\n\n    fn pull_spread(ptr: &mut KeyPtr) -> Self {\n        Self {\n            value: SpreadLayout::pull_spread(ptr),\n        }\n    }\n\n    fn push_spread(&self, ptr: &mut KeyPtr) {\n        SpreadLayout::push_spread(&self.value, ptr);\n    }\n\n    fn clear_spread(&self, ptr: &mut KeyPtr) {\n        SpreadLayout::clear_spread(&self.value, ptr);\n    }\n}\n\n")),(0,n.kt)("p",null,"You can check what each method does in the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/ink_storage/4.0.0-beta/ink_storage/traits/trait.SpreadLayout.html"},"trait's docs"),". Check how some data structures are implemented, such as ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/ink_storage/4.0.0-beta/src/ink_storage/lazy/mapping.rs.html#113"},"Mapping"),"."))}c.isMDXComponent=!0}}]);