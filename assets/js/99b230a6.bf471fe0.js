"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[5501],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={title:"Overview",slug:"/cargo-contract-cli"},i=void 0,c={unversionedId:"cargo-contract/overview",id:"cargo-contract/overview",title:"Overview",description:"version",source:"@site/docs/cargo-contract/overview.md",sourceDirName:"cargo-contract",slug:"/cargo-contract-cli",permalink:"/cargo-contract-cli",draft:!1,editUrl:"https://github.com/ink-docs/edit/master/docs/cargo-contract/overview.md",tags:[],version:"current",frontMatter:{title:"Overview",slug:"/cargo-contract-cli"},sidebar:"reference",previous:{title:"Overview",permalink:"/examples"},next:{title:"Overview",permalink:"/testnet"}},l={},s=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/cargo-contract"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/crates/v/cargo-contract.svg",alt:"version"}))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cargo-contract")," is a CLI tool which helps you set up and manage\nWebAssembly smart contracts written with ink!.\nYou can find it ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/cargo-contract"},"here on GitHub"),"\nand here on ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/cargo-contract"},"crates.io"),"."),(0,r.kt)("p",null,"The tool has a number of handy capabilities:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cargo-contract 0.8.0\nUtilities to develop Wasm smart contracts.\n\nUSAGE:\n    cargo contract <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nSUBCOMMANDS:\n    new                  Setup and create a new smart contract project\n    build                Compiles the contract, generates metadata, bundles both together in a '.contract' file\n    check                Check that the code builds as Wasm; does not output any build artifact to the top level `target/` directory\n    test                 Test the smart contract off-chain\n    deploy               Upload the smart contract code to the chain\n    instantiate          Instantiate a deployed smart contract\n    help                 Prints this message or the help of the given subcommand(s)\n")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"As a pre-requisite for the tool you need to install the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/WebAssembly/binaryen"},"binaryen")," package, which is used to optimize the WebAssembly bytecode of the contract."),(0,r.kt)("p",null,"Many package managers have it available nowadays \u2012 e.g. it's a package for ",(0,r.kt)("a",{parentName:"p",href:"https://tracker.debian.org/pkg/binaryen"},"Debian/Ubuntu"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://formulae.brew.sh/formula/binaryen"},"Homebrew")," and ",(0,r.kt)("a",{parentName:"p",href:"https://archlinux.org/packages/community/x86_64/binaryen/"},"Arch Linux"),"."),(0,r.kt)("p",null,"After you've installed the package execute:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo install cargo-contract --force --locked\n")),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--force")," to ensure you are updated to the most recent ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo-contract")," version."),(0,r.kt)("p",null,"You can then use ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo contract --help")," to start exploring the commands made available to you."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"In order to initialize a new ink! project you can use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo contract new flipper\n")),(0,r.kt)("p",null,"This will create a folder ",(0,r.kt)("inlineCode",{parentName:"p"},"flipper")," in your work directory.\nThe folder contains a scaffold ",(0,r.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"lib.rs"),", which both contain the necessary building blocks for using ink!."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"lib.rs")," contains our hello world contract \u2012 the ",(0,r.kt)("inlineCode",{parentName:"p"},"Flipper"),", which we explain in the next section."),(0,r.kt)("p",null,"In order to build the contract just execute these commands in the ",(0,r.kt)("inlineCode",{parentName:"p"},"flipper")," folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo contract build\n")),(0,r.kt)("p",null,"As a result you'll get the file ",(0,r.kt)("inlineCode",{parentName:"p"},"target/flipper.contract"),". It's a JSON which bundles the contract's\nmetadata and its Wasm blob. This file needs to be used when deploying the contract.\nYou additionally get the individual ",(0,r.kt)("inlineCode",{parentName:"p"},"target/flipper.wasm")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"target/metadata.json")," in the folder as well."))}u.isMDXComponent=!0}}]);