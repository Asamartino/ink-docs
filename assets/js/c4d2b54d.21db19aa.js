"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[2659],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,k=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},122:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"All Hooks",hide_title:!0,slug:"/frontend/hooks",description:"A list of all useink hooks"},l="All useink Hooks \ud83e\ude9d",s={unversionedId:"frontend/core/hooks/all-hooks",id:"frontend/core/hooks/all-hooks",title:"All Hooks",description:"A list of all useink hooks",source:"@site/docs/frontend/core/hooks/all-hooks.md",sourceDirName:"frontend/core/hooks",slug:"/frontend/hooks",permalink:"/frontend/hooks",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/core/hooks/all-hooks.md",tags:[],version:"current",frontMatter:{title:"All Hooks",hide_title:!0,slug:"/frontend/hooks",description:"A list of all useink hooks"},sidebar:"reference",previous:{title:"2. Connect Wallet",permalink:"/frontend/connect-wallet"},next:{title:"useCall",permalink:"/frontend/core/hooks/contracts/use-call"}},i={},c=[{value:"Contracts",id:"contracts",level:2},{value:"Wallets",id:"wallets",level:2},{value:"Substrate Runtime",id:"substrate-runtime",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"all-useink-hooks-"},"All ",(0,a.kt)("inlineCode",{parentName:"h1"},"useink")," Hooks \ud83e\ude9d"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Like what you see? Please ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/paritytech/useink"},"give it a star \u2b50")),(0,a.kt)("li",{parentName:"ol"},"Don't see a feature you need? ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/paritytech/useink/issues"},"Create a feature request"),". "),(0,a.kt)("li",{parentName:"ol"},"Have a question? Join the ",(0,a.kt)("a",{parentName:"li",href:"https://matrix.to/#/%23useink:parity.io"},"useink Element chat"),".")),(0,a.kt)("h2",{id:"contracts"},"Contracts"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/contracts/use-call"},"useCall")," - call a contract and get the decoded result or an error."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/contracts/use-call-subscription"},"useCallSubscription")," - call a contract and get the decoded result or an error on each new block."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/contracts/use-contract"},"useContract")," - create a contract client instance containing metadata and the contract's address."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/contracts/use-dry-run"},"useDryRun")," - send a dry run of a transaction to check if it will succeed and to determine gas costs."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/contracts/use-events"},"useEvents")," - fetch the events for a contract from state. Optionally filter by event name."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/contracts/use-event-subscription"},"useEventSubscription")," - subscribe to a contract's emitted events."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/contracts/use-tx"},"useTx")," - sign and send a contract transaction and get the decoded result or an error."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/contracts/use-tx-payment-info"},"useTxPaymentInfo")," - send a dry run of a transaction and get the total payment information required.")),(0,a.kt)("h2",{id:"wallets"},"Wallets"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/wallets/use-all-wallets"},"useAllWallets")," - get a list of all supported wallets including Talisman, PolkadotJs, and more."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/wallets/use-installed-wallets"},"useInstalledWallets")," - get a list of all supported wallets that are installed in a user's browser extensions."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/wallets/use-uninstalled-wallets"},"useUnInstalledWallets")," - get a list of all supported wallets that are ",(0,a.kt)("strong",{parentName:"li"},"NOT")," installed in a user's browser extensions."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/wallets/use-wallet"},"useWallet")," - connect to a wallet browser extension, and get account information.")),(0,a.kt)("h2",{id:"substrate-runtime"},"Substrate Runtime"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/substrate/use-api"},"useApi")," - get the api client instance configured for a specific chain. This contains RPC information, and is used in many other hooks."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/substrate/usebalance"},"useBalance")," - get an account's balance for a given chain."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/frontend/core/hooks/substrate/useblockheaders"},"useBlockHeaders")," - get block header information for a chain on each new block.")))}d.isMDXComponent=!0}}]);