"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[9108],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>p});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},k=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(t),k=o,p=d["".concat(l,".").concat(k)]||d[k]||f[k]||a;return t?n.createElement(p,c(c({ref:r},u),{},{components:t})):n.createElement(p,c({ref:r},u))}));function p(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=k;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[d]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=t[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},8483:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=t(7462),o=(t(7294),t(3905));const a={title:"useBlockHeader",description:"A React hook for fetching block header information on each new block"},c="useBlockHeader",i={unversionedId:"frontend/core/hooks/substrate/use-block-header",id:"frontend/core/hooks/substrate/use-block-header",title:"useBlockHeader",description:"A React hook for fetching block header information on each new block",source:"@site/docs/frontend/core/hooks/substrate/use-block-header.md",sourceDirName:"frontend/core/hooks/substrate",slug:"/frontend/core/hooks/substrate/use-block-header",permalink:"/frontend/core/hooks/substrate/use-block-header",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/frontend/core/hooks/substrate/use-block-header.md",tags:[],version:"current",frontMatter:{title:"useBlockHeader",description:"A React hook for fetching block header information on each new block"},sidebar:"reference",previous:{title:"useBalance",permalink:"/frontend/core/hooks/substrate/use-balance"},next:{title:"Configuration",permalink:"/frontend/configuration"}},l={},s=[{value:"Usage",id:"usage",level:2},{value:"Return Value",id:"return-value",level:2}],u={toc:s},d="wrapper";function f(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"useblockheader"},"useBlockHeader"),(0,o.kt)("p",null,"A React hook for fetching block header information on each new block. This hook is used\ninternally to trigger subscriptions when a block updates."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useBlockHeader } from 'useink'\n\nfunction Balances() {\n  // This will use the first chain in the configuration array (aka 'default chain')\n  const blockHeader = useBlockHeader() \n  // 'zeitgeist' must be configured in UseInkProvider\n  const zeitBlockHeader = useBlockHeader('zeitgeist')\n\n  return (\n    <ul>\n      <li>Current Block: {blockHeader?.blockNumber ? blockHeader.blockNumber : '--'}</li>\n      <li>Zeitgeist Current Block: {zeitBlockHeader?.blockNumber ? zeitBlockHeader.blockNumber : '--'}</li>\n    </ul>\n  )\n}\n")),(0,o.kt)("h2",{id:"return-value"},"Return Value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  blockNumber: number | undefined;\n  header: undefined | {\n    readonly parentHash: Hash;\n    readonly number: Compact<BlockNumber>;\n    readonly stateRoot: Hash;\n    readonly extrinsicsRoot: Hash;\n    readonly digest: Digest;\n  }\n} | undefined\n")))}f.isMDXComponent=!0}}]);