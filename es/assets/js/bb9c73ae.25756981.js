"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[1259],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),u=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=u(r),d=n,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return r?a.createElement(f,s(s({ref:t},l),{},{components:r})):a.createElement(f,s({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3594:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={title:"Por qu\xe9 Rust para Smart Contracts?",slug:"/por-que-rust-para-smart-contracts"},s=void 0,i={unversionedId:"intro/why-rust",id:"version-4.0.0-alpha.1/intro/why-rust",title:"Por qu\xe9 Rust para Smart Contracts?",description:"ink! no busca crear su nuevo lenguaje de programaci\u0153, sino que busca adaptarse a un subconjunto de rust para poder cumplir su prop\xf3sito. Si esto no es suficiente para convencerte, aqu\xed van otras buenas razones:",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-4.0.0-alpha.1/intro/why-rust.md",sourceDirName:"intro",slug:"/por-que-rust-para-smart-contracts",permalink:"/es/4.0.0-alpha.1/por-que-rust-para-smart-contracts",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/versioned_docs/version-4.0.0-alpha.1/intro/why-rust.md",tags:[],version:"4.0.0-alpha.1",frontMatter:{title:"Por qu\xe9 Rust para Smart Contracts?",slug:"/por-que-rust-para-smart-contracts"},sidebar:"reference",previous:{title:"Introducci\xf3n",permalink:"/es/4.0.0-alpha.1/"},next:{title:"Por qu\xe9 WebAssembly para Smart Contracts?",permalink:"/es/4.0.0-alpha.1/por-que-webassembly-para-smart-contracts"}},c={},u=[],l={toc:u};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"ink! no busca crear su nuevo lenguaje de programaci\u0153, sino que busca adaptarse a un subconjunto de rust para poder cumplir su prop\xf3sito. Si esto no es suficiente para convencerte, aqu\xed van otras buenas razones:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("span",{class:"highlight"},"Rust es un lenguaje ideal para smart contracts:")," It is type safe, memory safe, and free of undefined behaviors. It generates small binaries because it doesn\u2019t include extra bloat, like a garbage collector, and advanced optimizations and tree shaking remove dead code. Through compiler flags, Rust can automatically protect against integer overflow."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("span",{class:"highlight"},"Ecosistema de Rust:")," You gain from all of support available to the Rust ecosystem for free. As the language develops, ink! will automatically gain access to new features and functionality, improving how you can write smart contracts in the future."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("span",{class:"highlight"},"Herramientas:")," Dado que ink! sigue los est\xe1ndares de Rust, herramientas como rustfmt, clippy y rust-analyzer funcionen directamente. Lo mismo sucede con sismtemas de resaltado de sint\xe1xis o formateo de c\xf3digo en los editores de texto moderno. Adem\xe1s, Rust tiene test y benchmark incorporados directamente en el runner."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("span",{class:"highlight"},"No overhead:")," Runtime m\xednimo."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("span",{class:"highlight"},"Seguro & Eficiente:")," Cero costo y abstraciones seguros."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("span",{class:"highlight"},"Productivo:")," Cargo + Ecosistema de ",(0,n.kt)("a",{href:"https://crates.io"},"crates.io"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("span",{class:"highlight"},"1st class Wasm:")," Rust provee soporte primario para WebAssembly."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("span",{class:"highlight"},"Tama\xf1o compacto:")," El tama\xf1o es importante en los blockchains donde existen restriciones de espacio. El compilador de Rust es ideal en este sentido, dado que reordena los campos de struct para poder hacer cada tipo lo m\xe1s compacto posible. Es por eso que las estructuras de datos en Rust son muy compactas, hasta m\xe1s compactas que en C en ciertos casos.")))}p.isMDXComponent=!0}}]);