"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[2733],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>f});var i=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,i,r=function(e,a){if(null==e)return{};var t,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)t=n[i],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)t=n[i],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),l=function(e){var a=i.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=l(e.components);return i.createElement(s.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return i.createElement(i.Fragment,{},a)}},m=i.forwardRef((function(e,a){var t=e.components,r=e.mdxType,n=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||n;return t?i.createElement(f,o(o({ref:a},d),{},{components:t})):i.createElement(f,o({ref:a},d))}));function f(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var n=t.length,o=new Array(n);o[0]=m;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c[p]="string"==typeof e?e:r,o[1]=c;for(var l=2;l<n;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9616:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var i=t(7462),r=(t(7294),t(3905));const n={title:"Verificaci\xf3n de un contrato",slug:"/basics/contract-verification",hide_title:!0},o=void 0,c={unversionedId:"basics/verification",id:"basics/verification",title:"Verificaci\xf3n de un contrato",description:"La verificaci\xf3n de un contrato es el proceso de hacer coincidir un contrato deployado de ink! con el c\xf3digo fuente y la metadata generada cuando \xe9ste fue compilado.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/basics/verification.md",sourceDirName:"basics",slug:"/basics/contract-verification",permalink:"/es/basics/contract-verification",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/basics/verification.md",tags:[],version:"current",frontMatter:{title:"Verificaci\xf3n de un contrato",slug:"/basics/contract-verification",hide_title:!0},sidebar:"reference",previous:{title:"Contract Debugging",permalink:"/es/basics/contract-debugging"},next:{title:"Introducci\xf3n",permalink:"/es/macros-attributes"}},s={},l=[{value:"Realizar una compilaci\xf3n verificable",id:"realizar-una-compilaci\xf3n-verificable",level:2},{value:"Verificando un smart contract de ink!",id:"verificando-un-smart-contract-de-ink",level:2},{value:"Usando la web app del servicio de verificaci\xf3n",id:"usando-la-web-app-del-servicio-de-verificaci\xf3n",level:3},{value:"Usando Sirato",id:"usando-sirato",level:3},{value:"Carga de metadatos no verificados",id:"carga-de-metadatos-no-verificados",level:3}],d={toc:l},p="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(p,(0,i.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("img",{src:"/img/title/magnifying-glass.svg",className:"titlePic"}),(0,r.kt)("h1",{id:"verificaci\xf3n-de-un-contrato"},"Verificaci\xf3n de un Contrato"),(0,r.kt)("p",null,"La verificaci\xf3n de un contrato es el proceso de hacer coincidir un contrato deployado de ink! con el c\xf3digo fuente y la metadata generada cuando \xe9ste fue compilado. "),(0,r.kt)("p",null,"El proceso de verificaci\xf3n para lenguajes de smart contracts basados en Wasm es m\xe1s complejo que los lenguajes basados en EVM tal como Solidity debido a que el compilador de Rust no provee una compilaci\xf3n determinista de los contratos."),(0,r.kt)("p",null,"Para verificar un smart contract de ink! o Wasm el proceso de verificaci\xf3n debe recompilar el contrato en un entorno de host id\xe9ntico al que fue creado originalmente. La manera m\xe1s simple de hacerlo es usar un contenedor de Docker."),(0,r.kt)("p",null,"Como esto no ser\xe1 posible con los smart contracts existentes, se ha creado un mecanismo alternativo en el cual un deployador de contrato puede proveer un archivo de metadatos firmado para asociarlo al contrato. Este enfoque tambi\xe9n se describe abajo."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Por el momento, la herramienta CLI ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo-contract")," no provee una imagen  Docker para ink! creando compilaciones verificables. El siguiente ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/cargo-contract/issues/1065"},"issue")," se ha creado con detalles sobre esto."),(0,r.kt)("p",{parentName:"admonition"},"Como una soluci\xf3n provisoria, los Labs de Web3 est\xe1n publicando una ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/web3labs/ink-verifier-image"},"imagen de contenedor")," para la verificaci\xf3n de c\xf3digo fuente de los smart contracts ink!")),(0,r.kt)("p",null,"Los Labs de Web3 han puesto a disposici\xf3n una versi\xf3n p\xfablica de su  ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/web3labs/ink-verifier-server"},"servicio de verificaci\xf3n")," para atender a los ecosistemas de ink! y DotSama. Esto puede ser usado junto al contenedor de compilaci\xf3n de imagen verificable para validar los smart contracts de ink!."),(0,r.kt)("p",null,"Los siguientes pasos describen c\xf3mo crear una compilaci\xf3n verificable y de ese modo validarlo usando estos servicios."),(0,r.kt)("h2",{id:"realizar-una-compilaci\xf3n-verificable"},"Realizar una compilaci\xf3n verificable"),(0,r.kt)("p",null,"Ya deber\xedan estar familiarizados con el uso de ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo-contract")," para\n",(0,r.kt)("a",{parentName:"p",href:"/getting-started/building-your-contract"},"compilar su contrato"),"."),(0,r.kt)("p",null,"Necesitar\xe1n instalar el contenedor de imagen verificada de ink!:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cargo install \u2014 git \nhttps://github.com/web3labs/ink-verifier-image.git\n")),(0,r.kt)("p",null,"Ahora se puede realizar una compilaci\xf3n verificada al ejecutar el siguiente comando en la carpeta de proyecto de smart contracts:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"build-verifiable-ink -i ghcr.io/web3labs/ink-verifier .\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Las compilaciones reproducibles s\xf3lo funcionan con cargo-contract >= 2.0.2\ny los contratos generados con esa versi\xf3n en adelante. Para solucionarlo se puede usar en su lugar el archivo de metadatos firmados.")),(0,r.kt)("p",null,"Si se usara el ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/creating-an-ink-project"},"ejemplo flipper")," se ver\xeda un resultado similar al de abajo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"...\n [5/5] Generating bundle\n\nOriginal wasm size: 20.6K, Optimized: 1.4K\n\nThe contract was built in RELEASE mode.\n\nYour contract artifacts are ready. You can find them in:\n/build/package/src/target/ink\n\n  - flipper.contract (code + metadata)\n  - flipper.wasm (the contract's code)\n  - flipper.json (the contract's metadata)\n  adding: src/ (stored 0%)\n  adding: src/Cargo.lock (deflated 75%)\n  adding: src/Cargo.toml (deflated 52%)\n  adding: src/lib.rs (deflated 72%)\n  adding: flipper.contract (deflated 64%)\nVerification package in /build/target/ink/package.zip\nArchive:  /build/target/ink/package.zip\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n        0  2023-03-08 21:41   src/\n   105695  2023-03-08 21:28   src/Cargo.lock\n      573  2023-03-08 20:40   src/Cargo.toml\n     5177  2023-03-08 20:40   src/lib.rs\n     5278  2023-03-08 21:41   flipper.contract\n---------                     -------\n   116723                     5 files\n")),(0,r.kt)("p",null,"Si se tiene cualquier problema ejecutando la compilaci\xf3n, uno mismo puede compilarla ejecutando los siguientes comandos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd ../\ngit clone https://github.com/web3labs/ink-verifier-image.git\ncd ink-verifier-image\ndocker build . -t ink-verifier:develop\ncd ../flipper\nbuild-verifiable-ink -t develop .\n")),(0,r.kt)("p",null,"Habr\xe1 ahora un paquete de zipfile disponible que contendr\xe1 el c\xf3digo fuente del contrato, los metadatos y el binario de Wasm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"tree -L 3\n.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 lib.rs\n\u2514\u2500\u2500 target\n    \u2514\u2500\u2500 ink\n        \u2514\u2500\u2500 package.zip\n")),(0,r.kt)("p",null,"Ahora que se ha creado la compilaci\xf3n verificada puede ",(0,r.kt)("a",{parentName:"p",href:"getting-started/deploy-your-contract"},"deployar su contrato"),"."),(0,r.kt)("p",null,"Una vez deployado, se deber\xe1 tomar nota del c\xf3digo hash del contrato para poder verificarlo."),(0,r.kt)("h2",{id:"verificando-un-smart-contract-de-ink"},"Verificando un smart contract de ink!"),(0,r.kt)("h3",{id:"usando-la-web-app-del-servicio-de-verificaci\xf3n"},"Usando la web app del servicio de verificaci\xf3n"),(0,r.kt)("p",null,"El ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/web3labs/ink-verifier-server"},"servicio de verificaci\xf3n de ink!")," es un servicio web RESTful creado para verificar smart contracts deployados usando el ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/pallet-contracts"},"pallet-contracts"),"."),(0,r.kt)("p",null,"Web3 Labs alberga una instancia p\xfablica del servicio en\n",(0,r.kt)("a",{parentName:"p",href:"https://ink-verifier.sirato.xyz/"},"ink-verifier.sirato.xyz"),". Una interfaz Swagger para el servicio est\xe1 tambi\xe9n disponible en\n",(0,r.kt)("a",{parentName:"p",href:"https://ink-verifier.sirato.xyz/api/api-docs/"},"ink-verifier.sirato.xyz/api/api-docs/"),"."),(0,r.kt)("img",{src:"/img/verification-service-api.png",alt:"ink! Verification Service Swagger endpoint"}),(0,r.kt)("p",null,"El proceso de verificaci\xf3n incluye los siguientes pasos:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Un solicitante sube un archivo de paquete fuente para una red y un c\xf3digo hash "),(0,r.kt)("li",{parentName:"ol"},"El servidor controla que:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"El c\xf3digo fuente para la red y el c\xf3digo hash no han sido verificados a\xfan o no est\xe1n siendo verificados"),(0,r.kt)("li",{parentName:"ul"},"Hay suficientes recursos del host para comenzar una nueva verificaci\xf3n "))),(0,r.kt)("li",{parentName:"ol"},"El servidor descarga el Wasm byte code limpio correspondiente a la red y el c\xf3digo fuente provistos"),(0,r.kt)("li",{parentName:"ol"},"El servidor transmite el archivo si es un archivo comprimido"),(0,r.kt)("li",{parentName:"ol"},"El servidor mueve los archivos de staging al directorio processing"),(0,r.kt)("li",{parentName:"ol"},"El servidor ejecuta un contenedor para que la imagen de verificaci\xf3n valide el paquete en processing. Ver el flujo de tareas de verificaci\xf3n del c\xf3digo fuente para detalles."),(0,r.kt)("li",{parentName:"ol"},"En el caso de una salida del contenedor el servidor mueve los artefactos verificados al directorio publish si la verificaci\xf3n fue exitosa, de otro modo mantiene un registro en el directorio de errores. ")),(0,r.kt)("p",null,"Funciona con cualquier red que se define en el paquete ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/polkadot-js/apps/tree/master/packages/apps-config/src/endpoints"},"@polkadot/apps-config"),"."),(0,r.kt)("p",null,"Para verificar un contrato deployado usando el servicio necesitar\xe1 usar el endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"/verify/{network}/{codeHash}")," que est\xe1 documentado ",(0,r.kt)("a",{parentName:"p",href:"https://ink-verifier.sirato.xyz/api/api-docs/#/default/post_verify__network___codeHash_"},"aqu\xed"),"."),(0,r.kt)("p",null,"Una vez que el contrato ha sido verificado se pueden usar los endpoints",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"/contract/{codeHash}/metadata.json")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"/contract/{codeHash}/src")," para recuperar los metadatos y el c\xf3digo fuente respectivamente. "),(0,r.kt)("h3",{id:"usando-sirato"},"Usando Sirato"),(0,r.kt)("p",null,"Sirato Substrate es un explorador de smart contracts para los smart contracts de ink!. Se integra con el servicio de verificaci\xf3n de contratos permitiendo a los usuarios cargar archivos de paquete generados por la imagen de compilaci\xf3n verificable por medio de la UI Sirato en lugar de tener que usar el endpoint web."),(0,r.kt)("p",null,"Por otra parte una vez que un contrato ha sido verificado, los detalles de cualquier actividad de contrato y eventos que tienen lugar en una parachain o Substrate chain son decodificados para el usuario en Sirato."),(0,r.kt)("p",null,"Por ejemplo, para poder verificar un contrato deployado en la parachain Rococo, puede dirigirse a la instancia de Sirato en ",(0,r.kt)("a",{parentName:"p",href:"https://substrate.sirato.xyz/"},"substrate.sirato.xyz"),"."),(0,r.kt)("img",{src:"/img/sirato-substrate.png",alt:"Sirato Substrate"}),(0,r.kt)("p",null,"Desde all\xed se puede navegar al c\xf3digo deployado al hacer click en la referencia de c\xf3digo que compatible con el c\xf3digo hash devuelto por la devuelto por la llamada de instanciaci\xf3n de cargo contract."),(0,r.kt)("p",null,"Alternativamente, se puede acceder directamente entrando en la URL\n",(0,r.kt)("inlineCode",{parentName:"p"},"https://substrate.sirato.xyz/codes/0x<code-hash>"),"."),(0,r.kt)("img",{src:"/img/sirato-contract-instance.png",alt:"Sirato contract instance view"}),(0,r.kt)("p",null,"Ahora hacer clic en la pesta\xf1a c\xf3digo fuente:"),(0,r.kt)("img",{src:"/img/sirato-package-upload.png",alt:"Sirato package upload page"}),(0,r.kt)("p",null,"Luego cargar el archivo verificado ",(0,r.kt)("inlineCode",{parentName:"p"},"package.zip")," que se gener\xf3 anteriormente."),(0,r.kt)("img",{src:"/img/sirato-package-upload-done.png",alt:"Sirato package upload complete"}),(0,r.kt)("p",null,"Ahora se puede comenzar el proceso de verificaci\xf3n que inicia una compilaci\xf3n de los recursos provistos."),(0,r.kt)("img",{src:"/img/sirato-package-verify.png",alt:"Sirato package verification"}),(0,r.kt)("p",null,"Una vez que el proceso ha terminado se ver\xe1 el mensaje\n",(0,r.kt)("inlineCode",{parentName:"p"},"Contract successfully verified"),"."),(0,r.kt)("img",{src:"/img/sirato-verify-complete.png",alt:"Sirato package verification complete"}),(0,r.kt)("p",null,"Al hacer click en los archivos verificados se mostrar\xe1n los metadatos y archivos fuente asociados a su contrato."),(0,r.kt)("img",{src:"/img/sirato-browse-verified.png",alt:"Sirato browse verified contract"}),(0,r.kt)("p",null,"Luego si accedemos de nuevo a nuestra instancia de contrato, cualquier m\xe9todo o evento estar\xe1 ahora decodificado."),(0,r.kt)("img",{src:"/img/sirato-decoded-transaction.png",alt:"Sirato decoded contract transaction"}),(0,r.kt)("p",null,"Podemos verificar esto invocando un m\xe9todo en el contrato. Podemos ver ahora el m\xe9todo decodificado que fue llamado en Sirato."),(0,r.kt)("img",{src:"/img/sirato-decoded-transaction2.png",alt:"Another Sirato decoded contract transaction"}),(0,r.kt)("h3",{id:"carga-de-metadatos-no-verificados"},"Carga de metadatos no verificados"),(0,r.kt)("p",null,"El servicio de verificaci\xf3n soporta la carga de metadatos del contrato firmado como una alternativa adicional para metadatos generados por compilaci\xf3n reproducible. Por favor tener en cuenta que los metadatos firmados no est\xe1n verificados y el titular del c\xf3digo hash es confiable. "),(0,r.kt)("p",null,"Esta car\xe1cteristica responde a:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"El soporte para los datos ",(0,r.kt)("inlineCode",{parentName:"li"},"build_info")," s\xf3lo est\xe1 disponible desde ",(0,r.kt)("inlineCode",{parentName:"li"},"cargo-contract")," 2.0.2. "),(0,r.kt)("li",{parentName:"ol"},"A\xfan no hay una imagen oficial o procedimiento con respecto a compilaciones reproducibles."),(0,r.kt)("li",{parentName:"ol"},"Mientras tanto queremos expandir la utilidad del servicio.")),(0,r.kt)("p",null,"Aunque est\xe1 lejos de ser la manera ideal para vincular los metadatos a un c\xf3digo hash dado evita un exploit trivial al:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Verificar que la firma es de la cuenta del propietario del c\xf3digo hash. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Verificar que el mensaje firmado coincide con el sha256 del metadata.json subido + el c\xf3digo hash del bytecode del contrato."),(0,r.kt)("p",{parentName:"li"},"Para proveer los metadatos firmados, ser\xe1 necesario usar el endpoint\n",(0,r.kt)("inlineCode",{parentName:"p"},"/upload/{network}/{codeHash}")," que est\xe1 documentado ",(0,r.kt)("a",{parentName:"p",href:"https://ink-verifier.sirato.xyz/api/api-docs/#/default/post_upload__network___codeHash_"},"aqu\xed")))),(0,r.kt)("p",null,"Para el cuerpo de la solicitud se necesitar\xe1 firmar el mensaje usando la cuenta que subi\xf3 el contrato. Se puede usar la ",(0,r.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/signing"},"herramienta firmar y verificar")," en Polkadot.js."),(0,r.kt)("p",null,"Tambi\xe9n se puede usar Sirato para esto, se pueden encontrar instrucciones\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/web3labs/ink-verifier-server/blob/main/docs/TUTORIAL.md#s2---owner-signed-metadata"},"aqu\xed"),"."))}u.isMDXComponent=!0}}]);