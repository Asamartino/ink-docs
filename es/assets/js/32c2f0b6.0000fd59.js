"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[2954],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),g=r,m=p["".concat(c,".").concat(g)]||p[g]||d[g]||o;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1311:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={title:"Ejecute su Contrato",slug:"/getting-started/calling-your-contract"},i=void 0,l={unversionedId:"getting-started/calling",id:"getting-started/calling",title:"Ejecute su Contrato",description:"Ahora que se ha desplegado su contrato, podremos interactuar con \xe9l! Flipper solo tiene dos funciones,",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/getting-started/calling.md",sourceDirName:"getting-started",slug:"/getting-started/calling-your-contract",permalink:"/es/4.x/getting-started/calling-your-contract",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/getting-started/calling.md",tags:[],version:"current",frontMatter:{title:"Ejecute su Contrato",slug:"/getting-started/calling-your-contract"},sidebar:"reference",previous:{title:"Desplega tu Contrato",permalink:"/es/4.x/getting-started/deploy-your-contract"},next:{title:"Troubleshooting",permalink:"/es/4.x/getting-started/troubleshooting"}},c={},s=[{value:"Dry-run via RPC",id:"dry-run-via-rpc",level:3},{value:"State mutating via submitting a Transaction",id:"state-mutating-via-submitting-a-transaction",level:3},{value:"Using the Contracts UI",id:"using-the-contracts-ui",level:2},{value:"1. funci\xf3n get()",id:"1-funci\xf3n-get",level:3},{value:"2. funci\xf3n flip()",id:"2-funci\xf3n-flip",level:3},{value:"1. <code>get()</code> function",id:"1-get-function",level:3},{value:"2. <code>flip()</code> function",id:"2-flip-function",level:3}],u={toc:s};function p(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Ahora que se ha desplegado su contrato, podremos interactuar con \xe9l! Flipper solo tiene dos funciones,\n",(0,r.kt)("inlineCode",{parentName:"p"},"flip()")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," por lo que vamos a ver como jugar con ambas."),(0,r.kt)("div",{class:"translateTodo"},"## RPC calls vs. Transactions",(0,r.kt)("p",null,"There are two ways of calling a contract:"),(0,r.kt)("h3",{id:"dry-run-via-rpc"},"Dry-run via RPC"),(0,r.kt)("p",null,"Remote procedure calls, or RPC methods, are a way for an external program \u2013 for example, a browser\nor front-end application \u2013 to communicate with a Substrate node.\nFor example, you might use an RPC method to read a stored value, submit a transaction, or request\ninformation about the chain a node is connected to."),(0,r.kt)("p",null,"If a user interface displays the value of a contract (e.g. the balance of an account in\nan ERC-20 contract), then this is typically done via RPC. Specifically it is done by\nexecuting a synchronous dry-run of the contract method and returning its result.\nThe following schema depicts this."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Contract dry-run via RPC",src:n(5858).Z,width:"1288",height:"534"})),(0,r.kt)("p",null,"RPC calls don't require any tokens, they just require a connection to a node in the\nnetwork. It's important to note that the execution won't result in any state mutations\non the blockchain, it really just is a dry-run."),(0,r.kt)("h3",{id:"state-mutating-via-submitting-a-transaction"},"State mutating via submitting a Transaction"),(0,r.kt)("p",null,"The other method of executing a call to a contract is by submitting a transaction\non-chain. This requires tokens of the network to pay for the cost of the transaction.\nThe transaction will be put in a transaction pool and asynchronously processed.\nThe important implication here is that during submission of the transaction no result\nis available. This is different from an RPC call."),(0,r.kt)("p",null,"The typical pattern for how a client can recognize the result of the contract call is\nto have the contract emit an event and have the client actively listen for such an\nevent. Typically libraries (like ",(0,r.kt)("inlineCode",{parentName:"p"},"polkadot-js/api"),") provide API functions to do just that.\nThe important take-away is that contract developers have to make sure that events\nare emitted if they want clients to be able to pick up on them."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Contract execution via transaction",src:n(5049).Z,width:"1288",height:"534"}))),(0,r.kt)("h2",{id:"using-the-contracts-ui"},"Using the Contracts UI"),(0,r.kt)("h3",{id:"1-funci\xf3n-get"},"1. funci\xf3n get()"),(0,r.kt)("p",null,"Establecemos el valor inicial del contrato Flipper\n",(0,r.kt)("inlineCode",{parentName:"p"},"value")," a ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," cuendo instanciemos el contrato. Comprobemos que este es el caso."),(0,r.kt)("p",null,"El la secci\xf3n ",(0,r.kt)("strong",{parentName:"p"},"Message to Send"),', selecciona el mensaje "',(0,r.kt)("strong",{parentName:"p"},"get(): bool"),'" y acepta los valores por defecto para el resto de opciones.'),(0,r.kt)("p",null,"Pulsa ",(0,r.kt)("strong",{parentName:"p"},'"Read"')," y confirma que el valor que te devuelve sea ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"An image of Flipper RPC call with false",src:n(9456).Z,width:"2750",height:"1952"})),(0,r.kt)("h3",{id:"2-funci\xf3n-flip"},"2. funci\xf3n flip()"),(0,r.kt)("p",null,"Vamos a cambiar el valor a ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," ahora!"),(0,r.kt)("p",null,"El mensaje alternativo para enviar con la UI es ",(0,r.kt)("inlineCode",{parentName:"p"},"flip()"),". Otra vez, acepte los valores predeterminados para el resto de opciones y haga clic en ",(0,r.kt)("strong",{parentName:"p"},"Call")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"An image of a Flipper transaction",src:n(1120).Z,width:"2750",height:"1952"})),(0,r.kt)("p",null,"Si la transacci\xf3n fue exitosa, deber\xedamos poder volver a llamar a la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," y ver nuestro almacenamiento actualizado:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"An image of Flipper RPC call with true",src:n(8509).Z,width:"2750",height:"1952"})),(0,r.kt)("p",null,"Woohoo! Has desplegado tu primer smart contract!"),(0,r.kt)("div",{class:"translateTodo"},"## Using `cargo-contract`",(0,r.kt)("p",null,"Calling a contract can also be done via the command-line!"),(0,r.kt)("h3",{id:"1-get-function"},"1. ",(0,r.kt)("inlineCode",{parentName:"h3"},"get()")," function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo contract build\ncargo contract upload --suri //Alice\n\ncargo contract instantiate --suri //Alice --args true\n# The output of this command will contain the contract address,\n# insert it in the command below.\n\ncargo contract call --contract ... --message get --dry-run --suri //Alice\n")),(0,r.kt)("h3",{id:"2-flip-function"},"2. ",(0,r.kt)("inlineCode",{parentName:"h3"},"flip()")," function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo contract call --contract ... --message flip --suri //Alice\n"))))}p.isMDXComponent=!0},5049:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/events-9f1d9c0bb31d3777ff8f425bcaba99c5.png"},9456:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/flipper-false-e8506dfd800a64c0d39ebc50ba2813e5.png"},8509:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/flipper-true-5647327602f44a9e51b710f7ece60c77.png"},5858:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rpc-14af8881faec3037c133a95208fd4735.png"},1120:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/send-as-transaction-f551eeeeb6eee601202582d3405efc37.png"}}]);