"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[6508],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),i=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=i(r),m=n,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?a.createElement(f,s(s({ref:t},l),{},{components:r})):a.createElement(f,s({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=m;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u[p]="string"==typeof e?e:n,s[1]=u;for(var i=2;i<o;i++)s[i]=r[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},398:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>u,toc:()=>i});var a=r(7462),n=(r(7294),r(3905));const o={title:"Estructuras de Datos Personalizadas",slug:"/datastructures/custom-datastructure"},s=void 0,u={unversionedId:"datastructures/custom",id:"datastructures/custom",title:"Estructuras de Datos Personalizadas",description:"TODO: Beware, this page is no longer up to date for 4.0!",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/datastructures/custom.md",sourceDirName:"datastructures",slug:"/datastructures/custom-datastructure",permalink:"/es/datastructures/custom-datastructure",draft:!1,editUrl:"https://github.com/paritytech/ink-docs/edit/master/docs/datastructures/custom.md",tags:[],version:"current",frontMatter:{title:"Estructuras de Datos Personalizadas",slug:"/datastructures/custom-datastructure"},sidebar:"reference",previous:{title:"Storage Layout",permalink:"/es/datastructures/storage-layout"},next:{title:"Metadata Format",permalink:"/es/datastructures/storage-in-metadata"}},c={},i=[],l={toc:i};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"TODO: Beware, this page is no longer up to date for 4.0!")),(0,n.kt)("p",null,"Mientras que el crate ",(0,n.kt)("inlineCode",{parentName:"p"},"ink_storage")," proporciona toneladas de utilidades \xfatiles y estructuras de datos para organizar y manipular el storage del contrato, los\nautores del contrato no est\xe1n limitados por sus capacidades. Al implementar el n\xfacleo de los traits ",(0,n.kt)("inlineCode",{parentName:"p"},"SpreadLayout"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"PackedLayout")," (y el trait ",(0,n.kt)("inlineCode",{parentName:"p"},"StorageLayout"),"\npara soportar el metadata generado por el bundle ",(0,n.kt)("inlineCode",{parentName:"p"},".contract"),") los usuarios son capaces de definir sus propias estructuras de datos personalizadas con su conjunto de requerimientos y features que funcionen con las estructuras de datos del ",(0,n.kt)("inlineCode",{parentName:"p"},"ink_storage")," mientras que cumplan los meros requisitos establecidos por esos dos traits."),(0,n.kt)("p",null,"A continuaci\xf3n se muestra un ejemplo b\xe1sico de un struct personalizado:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"struct Inner {\n    value: bool\n}\n\n#[ink(storage)]\npub struct MyContract {\n    inner: Inner\n}\n")),(0,n.kt)("p",null,"Compilar el c\xf3digo anterior dar\xe1 como resultado errores. Mientras que tener un inner struct que solo contiene un booleano puede no ser la mejor idea, funciona bien para ilustrar como implementar el trait:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"impl SpreadLayout for Inner {\n    const FOOTPRINT: u64 = 1;\n\n    fn pull_spread(ptr: &mut KeyPtr) -> Self {\n        Self {\n            value: SpreadLayout::pull_spread(ptr),\n        }\n    }\n\n    fn push_spread(&self, ptr: &mut KeyPtr) {\n        SpreadLayout::push_spread(&self.value, ptr);\n    }\n\n    fn clear_spread(&self, ptr: &mut KeyPtr) {\n        SpreadLayout::clear_spread(&self.value, ptr);\n    }\n}\n\n")),(0,n.kt)("p",null,"Puedes comprobar que hace cada m\xe9todo en los ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/ink_storage/4.0.0-beta/ink_storage/traits/trait.SpreadLayout.html"},"trait's docs"),". Comprueba como algunas estructuras de datos est\xe1n implementadas, como ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs/ink_storage/4.0.0-beta/src/ink_storage/lazy/mapping.rs.html#113"},"Mapping"),"."))}p.isMDXComponent=!0}}]);