(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{67:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(2),i=t(6),a=(t(0),t(95)),o={title:"Trait Definitions",slug:"/basics/trait-definitions"},s={unversionedId:"basics/trait-definitions",id:"basics/trait-definitions",isDocsHomePage:!1,title:"Trait Definitions",description:"Through the #[ink::trait_definition] proc. macro it is now possible to define your very own trait definitions that are then implementable by ink! smart contracts.",source:"@site/docs/basics/trait-definitions.md",slug:"/basics/trait-definitions",permalink:"/ink-docs/basics/trait-definitions",editUrl:"https://github.com/ink-docs/edit/master/docs/basics/trait-definitions.md",version:"current",sidebar:"reference",previous:{title:"Events",permalink:"/ink-docs/basics/events"},next:{title:"Cross-Contract Calling",permalink:"/ink-docs/basics/cross-contract-calling"}},c=[{value:"Example",id:"example",children:[]}],l={rightToc:c};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Through the ",Object(a.b)("inlineCode",{parentName:"p"},"#[ink::trait_definition]")," proc. macro it is now possible to define your very own trait definitions that are then implementable by ink! smart contracts."),Object(a.b)("p",null,"This allows to defined shared smart contract interfaces to different concrete implementations.\nNote that this ink! trait definition can be defined anywhere, even in another crate!"),Object(a.b)("h3",{id:"example"},"Example"),Object(a.b)("p",null,"Defined in the ",Object(a.b)("inlineCode",{parentName:"p"},"base_erc20.rs")," module."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust"}),"use ink_lang as ink;\n\n#[ink::trait_definition]\npub trait BaseErc20 {\n    /// Creates a new ERC-20 contract and initializes it with the initial supply for the instantiator.\n    #[ink(constructor)]\n    fn new(initial_supply: Balance) -> Self;\n\n    /// Returns the total supply.\n    #[ink(message)]\n    fn total_supply(&self) -> Balance;\n\n    /// Transfers `amount` from caller to `to`.\n    #[ink(message, payable)]\n    fn transfer(&mut self, to: AccountId, amount: Balance);\n}\n")),Object(a.b)("p",null,"An ink! smart contract definition can then implement this trait definition as follows:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust"}),"use ink_lang as ink;\n\n#[ink::contract]\nmod erc20 {\n    use base_erc20::BaseErc20;\n\n    #[ink(storage)]\n    pub struct Erc20 {\n        total_supply: Balance,\n        // more fields ...\n    }\n\n    impl BaseErc20 for Erc20 {\n        #[ink(constructor)]\n        fn new(initial_supply: Balance) -> Self {\n            // implementation ...\n        }\n\n        #[ink(message)]\n        fn total_supply(&self) -> Balance {\n            // implementation ...\n        }\n\n        #[ink(message, payable)]\n        fn transfer(&mut self, to: AccountId, amount: Balance) {\n            // implementation ...\n        }\n    }\n}\n")),Object(a.b)("p",null,"Calling the above ",Object(a.b)("inlineCode",{parentName:"p"},"Erc20")," explicitely through its trait implementation can be done just as if it was normal Rust code:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust"}),"// --- Instantiating the ERC-20 contract:\n//\nlet mut erc20 = <Erc20 as BaseErc20>::new(1000);\n// --- Is just the same as:\nuse base_erc20::BaseErc20;\nlet mut erc20 = Erc20::new(1000);\n\n// --- Retrieving the total supply:\n//\nassert_eq!(<Erc20 as BaseErc20>::total_supply(&erc20), 1000);\n// --- Is just the same as:\nuse base_erc20::BaseErc20;\nassert_eq!(erc20.total_supply(), 1000);\n")),Object(a.b)("p",null,"There are still many limitations to ink! trait definitions and trait implementations.\nFor example it is not possible to define associated constants or types or have default implemented methods.\nThese limitations exist because of technical intricacies, however, please expect that many of those will be tackled in future ink! releases."))}p.isMDXComponent=!0},95:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),p=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,b=u["".concat(o,".").concat(m)]||u[m]||f[m]||a;return t?i.a.createElement(b,s(s({ref:n},l),{},{components:t})):i.a.createElement(b,s({ref:n},l))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);