(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{107:function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},h=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=l(n),b=r,f=h["".concat(i,".").concat(b)]||h[b]||d[b]||o;return n?a.a.createElement(f,c(c({ref:t},u),{},{components:n})):a.a.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),o=(n(0),n(107)),i={title:"Frequently Asked Questions",slug:"/faq"},c={unversionedId:"faq/intro",id:"faq/intro",isDocsHomePage:!1,title:"Frequently Asked Questions",description:'Is it "ink" or "ink!"? What does the "!" stand for?',source:"@site/docs/faq/intro.md",slug:"/faq",permalink:"/ink-docs/faq",editUrl:"https://github.com/ink-docs/edit/master/docs/faq/intro.md",version:"current",sidebar:"reference",previous:{title:"Overview",permalink:"/ink-docs/canvas"}},s=[{value:"Is it &quot;ink&quot; or &quot;ink!&quot;? What does the &quot;!&quot; stand for?",id:"is-it-ink-or-ink-what-does-the--stand-for",children:[]},{value:"Who is &quot;Squink&quot;?",id:"who-is-squink",children:[]},{value:"What&#39;s the relationship of Substrate/Polkadot?",id:"whats-the-relationship-of-substratepolkadot",children:[]},{value:"How to do cross-contract calling?",id:"how-to-do-cross-contract-calling",children:[]},{value:"What is a contract&#39;s ABI or Metadata?",id:"what-is-a-contracts-abi-or-metadata",children:[]},{value:"Can a re-entrancy bug occur in ink! contracts?",id:"can-a-re-entrancy-bug-occur-in-ink-contracts",children:[]},{value:"What are chain-extensions?",id:"what-are-chain-extensions",children:[]},{value:"How can I use ink! with a Substrate chain with a custom chain config?",id:"how-can-i-use-ink-with-a-substrate-chain-with-a-custom-chain-config",children:[]},{value:"What does the <code>#![cfg_attr(not(feature = &quot;std&quot;), no_std)]</code> at the beginning of each contract mean?",id:"what-does-the-cfg_attrnotfeature--std-no_std-at-the-beginning-of-each-contract-mean",children:[]},{value:"Overflow Safety?",id:"overflow-safety",children:[]},{value:"What is the difference between memory and storage?",id:"what-is-the-difference-between-memory-and-storage",children:[]}],u={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"is-it-ink-or-ink-what-does-the--stand-for"},'Is it "ink" or "ink!"? What does the "!" stand for?'),Object(o.b)("p",null,"TODO"),Object(o.b)("h3",{id:"who-is-squink"},'Who is "Squink"?'),Object(o.b)("div",{class:"squid-container"},Object(o.b)("img",{src:"./img/ink-squid.svg",alt:"Squink \u2012 the ink! mascot",class:"squid"}),"This is Squink",Object(o.b)("br",null),"todo",Object(o.b)("br",null),"todo"),Object(o.b)("h3",{id:"whats-the-relationship-of-substratepolkadot"},"What's the relationship of Substrate/Polkadot?"),Object(o.b)("p",null,"TODO"),Object(o.b)("h3",{id:"how-to-do-cross-contract-calling"},"How to do cross-contract calling?"),Object(o.b)("p",null,"See the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/basics/cross-contract-calling"}),"Cross-contract calling")," section."),Object(o.b)("h3",{id:"what-is-a-contracts-abi-or-metadata"},"What is a contract's ABI or Metadata?"),Object(o.b)("p",null,"TODO"),Object(o.b)("h3",{id:"can-a-re-entrancy-bug-occur-in-ink-contracts"},"Can a re-entrancy bug occur in ink! contracts?"),Object(o.b)("p",null,"TODO"),Object(o.b)("h3",{id:"what-are-chain-extensions"},"What are chain-extensions?"),Object(o.b)("p",null,"TODO"),Object(o.b)("h3",{id:"how-can-i-use-ink-with-a-substrate-chain-with-a-custom-chain-config"},"How can I use ink! with a Substrate chain with a custom chain config?"),Object(o.b)("p",null,"TODO"),Object(o.b)("h3",{id:"what-does-the-cfg_attrnotfeature--std-no_std-at-the-beginning-of-each-contract-mean"},"What does the ",Object(o.b)("inlineCode",{parentName:"h3"},'#![cfg_attr(not(feature = "std"), no_std)]')," at the beginning of each contract mean?"),Object(o.b)("p",null,"TODO"),Object(o.b)("h3",{id:"overflow-safety"},"Overflow Safety?"),Object(o.b)("p",null,'Being written in Rust, ink! can provide compile-time overflow/underflow safety. Using a Rust compiler configuration, you can specify whether you want to support overflowing math, or if you want contract execution to panic when overflows occur. No need to continually import "Safe Math" libraries, although Rust also provides ',Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.rust-lang.org/std/primitive.u32.html"}),"integrated checked, wrapped, and saturated math functions"),"."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note: There are some known issues regarding functionality of compiler level overflow checks and the resulting size of the Wasm blob. This feature may change or be iterated on in the future.")),Object(o.b)("h3",{id:"what-is-the-difference-between-memory-and-storage"},"What is the difference between memory and storage?"),Object(o.b)("p",null,"In ink!, memory refers to computer memory, while storage refers to the on-chain storage\nused by a contract instance. Memory is temporary and only lasts until the contract\nexecution is done, while storage is persistent and lasts over many contract executions.\nThe contract storage is built on top of the runtime storage, and access is considered to be slow."))}l.isMDXComponent=!0}}]);